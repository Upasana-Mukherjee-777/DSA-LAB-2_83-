#include <stdio.h>
#include<stdbool.h>

#define MAX_SIZE 1000 

typedef struct stack{
	int arr[MAX_SIZE];
	int top;
} Stack;

void initialize(Stack *stack){
	stack -> top = -1;
}

bool isEmpty(Stack *stack){
	return stack -> top == -1;
}

bool isFull(Stack *stack){
	return stack -> top == MAX_SIZE - 1;
}

int pop(Stack *stack){
	if(isEmpty(stack)){
		printf("Stack Underflow!!!");
		return -1;
	}
	int popped = stack -> arr[stack -> top];
	stack -> top --;
	printf("Popped %d from the stack \n", popped);
	return popped;
}

int peek(Stack *stack){
	if(isEmpty(stack)){
		printf("The stack is empty!!!\n");
		return -1;
	}
	return stack->arr[stack->top];
}

void push(Stack *stack, int value){
	if(isFull(stack)){
		printf("Stack Overflow!!!");
		return;
	}
	stack -> arr[++stack->top] = value;
	printf("Pushed %d into the stack\n", value);
}

int main(){
	Stack stack;
	initialize(&stack);
	push(&stack, 3);
	printf("Top element : %d\n", peek(&stack));
	push(&stack, 5);
	printf("Top element : %d\n", peek(&stack));
	push(&stack, 0);
	printf("Top element : %d\n", peek(&stack));
	push(&stack, 6);
	printf("Top element : %d\n", peek(&stack));
	
	while(!isEmpty(&stack)){
		printf("Top element : %d\n", peek(&stack));
		printf("Popped element : %d\n", pop(&stack));
	}
return 0;
}
